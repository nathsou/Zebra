
data Bool = True | False;
data Maybe a = None | Some a;
data List a = Nil | Cons a (List a);

isNone None = True;
isNone _ = False;

isSome (Some _) = True;
isSome _ = False;

len x0 = case x0 of
    | [] -> 0
    | (h :: tl) -> (len tl) + 1;

and True True = True;
and _ _ = False;

range n = n :: (if n == 0 then Nil else range (n - 1));

main = len;